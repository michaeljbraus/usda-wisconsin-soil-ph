t.test(dat.Wisconsin$Lab.CO2.MicropH, dat.Wisconsin$High.CO2.MicropH, paired = TRUE, alternative = "two.sided")
t.test(10^-dat.Wisconsin$Lab.CO2.MicropH, 10^-dat.Wisconsin$High.CO2.MicropH, paired = TRUE, alternative = "two.sided")
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Water.Soil.Ratio)
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Stateion.Name)
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Station.Name)
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Water.Soil.Ratio)
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Station.Name)
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Water.Soil.Ratio)
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Station.Name)
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Texture.Name)
qplot(data = dat, x = Perc.Clay, y = 10^-Lab.CO2.MicropH, color = Water.Soil.Ratio)
qplot(data = dat, x = Perc.Clay, y = 10^-Lab.CO2.MicropH, color = Station.Name)
library(ggplot2)
```
```{r}
dat <- read.csv(file = "2019-08-25-hatch-ph-multifactorial-merged.csv", header = T)
dat$co2.pH.diff <- dat$Lab.CO2.MicropH-dat$High.CO2.MicropH
dat$co2.exp.pH.diff <- 10^-(dat$Lab.CO2.MicropH)-10^-(dat$High.CO2.MicropH)
str(dat)
```
dat.Wisconsin <- subset(dat, Station.Name!="Spooner")
qplot(100*(10^-dat.Wisconsin$co2.exp.pH.diff)/(10^-dat.Wisconsin$Lab.CO2.MicropH), geom="histogram", color = dat.Wisconsin$Station.Name, alpha = 0.4, binwidth = 3)
```{r, results="hide"}
# Load libraries
library(phyloseq)
library(dada2)
library(ggplot2)
library(RColorBrewer)
library(vegan)
# Set working directory
```
```{r, results="hide"}
# Import sequence processing table and check it out
# How many sequences were retained at each step?
track = readRDS("track.rds")
track
```
```{r, results="hide"}
# Import final otu table
OTUs = readRDS("OTUtab.nochim.rds")
# Change rows and columns so taxa are rows
OTUs = t(OTUs)
# Import as phyloseq object table
otutab = otu_table(OTUs, taxa_are_rows=TRUE)
head(otutab)
# Look at lowest-abundance samples
head(sort(sample_sums(otutab)))
name = row.names(otutab)[1]
name
hist(nchar(row.names(otutab)))
```
```{r, results="hide"}
colnames(otutab)
# The sample names have suffixes appended to them - we just want sample IDs
# Get names
names = colnames(otutab)
# Remove last 17 characters
newnames = gsub('.{17}$', '', names)
# Check out names
newnames
# Assign new names to samples
colnames(otutab) = newnames
# Same thing if we wanted to simplify OTU names to IDs
# Instead of sequences (although that's useful)
otunames=row.names(otutab)
length(otunames)
newotunames = paste("OTU",rep(1:length(otunames)),sep="")
head(newotunames)
row.names(otutab) = newotunames
head(otutab)
# Cut off the sampling ID to match metadata
for (i in 1:length(colnames(otutab))){
newname = strsplit(colnames(otutab[i]),"_")[[i]][1]
colnames(otutab)[i]=newname
}
# Import sample data
samdat = read.csv("hatch-metadata.csv")
samdat$Exp.Soil.pH <- 10^(-samdat$Soil.pH)
samdat$Sample.ID = as.character(samdat$Sample.ID)
samdat$Sample.ID[1:9] = paste("00",samdat$Sample.ID[1:9],sep="")
samdat$Sample.ID[10:length(samdat$Sample.ID)] = paste("0",samdat$Sample.ID[10:length(samdat$Sample.ID)],sep="")
# Check we have all the same sample names now
samdat$Sample.ID == colnames(otutab)[1:65]
samdat = sample_data(samdat)
row.names(samdat) = samdat$Sample.ID
# Create phyloseq object
ps = phyloseq(otu_table=otutab,sample_data=samdat)
```{r, results="hide"}
# Load libraries
library(phyloseq)
library(dada2)
library(ggplot2)
library(RColorBrewer)
library(vegan)
# Set working directory
```
```{r, results="hide"}
# Import sequence processing table and check it out
# How many sequences were retained at each step?
track = readRDS("track.rds")
track
```
```{r, results="hide"}
# Import final otu table
OTUs = readRDS("otutab.nochim.rds")
# Change rows and columns so taxa are rows
OTUs = t(OTUs)
# Import as phyloseq object table
otutab = otu_table(OTUs, taxa_are_rows=TRUE)
head(otutab)
# Look at lowest-abundance samples
head(sort(sample_sums(otutab)))
name = row.names(otutab)[1]
name
hist(nchar(row.names(otutab)))
```
```{r, results="hide"}
colnames(otutab)
# The sample names have suffixes appended to them - we just want sample IDs
# Get names
names = colnames(otutab)
# Remove last 17 characters
newnames = gsub('.{17}$', '', names)
# Check out names
newnames
# Assign new names to samples
colnames(otutab) = newnames
# Same thing if we wanted to simplify OTU names to IDs
# Instead of sequences (although that's useful)
otunames=row.names(otutab)
length(otunames)
newotunames = paste("OTU",rep(1:length(otunames)),sep="")
head(newotunames)
row.names(otutab) = newotunames
head(otutab)
# Cut off the sampling ID to match metadata
for (i in 1:length(colnames(otutab))){
newname = strsplit(colnames(otutab[i]),"_")[[i]][1]
colnames(otutab)[i]=newname
}
# Import sample data
samdat = read.csv("hatch-metadata.csv")
samdat$Exp.Soil.pH <- 10^(-samdat$Soil.pH)
samdat$Sample.ID = as.character(samdat$Sample.ID)
samdat$Sample.ID[1:9] = paste("00",samdat$Sample.ID[1:9],sep="")
samdat$Sample.ID[10:length(samdat$Sample.ID)] = paste("0",samdat$Sample.ID[10:length(samdat$Sample.ID)],sep="")
# Check we have all the same sample names now
samdat$Sample.ID == colnames(otutab)[1:65]
samdat = sample_data(samdat)
# Import sample data
samdat = read.csv("hatch-metadata.csv")
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Water.Soil.Ratio)
dat <- read.csv(file = "multifactorial/2019-08-25-hatch-ph-multifactorial-merged.csv", header = T)
dat$co2.pH.diff <- dat$Lab.CO2.MicropH-dat$High.CO2.MicropH
dat$co2.exp.pH.diff <- 10^-(dat$Lab.CO2.MicropH)-10^-(dat$High.CO2.MicropH)
str(dat)
qplot(data = dat, x = Lab.CO2.MicropH, y = High.CO2.MicropH, color = Water.Soil.Ratio)
qplot(data = dat, x = Lab.CO2.MicropH, y = High.CO2.MicropH, color = Station.Name)
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio)
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Station.Name)
qplot(dat$co2.pH.diff, geom="histogram", color = dat$Station.Name, alpha = 0.4, binwidth = 0.05)
qplot(100*(dat$co2.exp.pH.diff)/(10^-dat$Lab.CO2.MicropH), geom="histogram", color = dat$Station.Name, alpha = 0.4, binwidth = 3)
t.test(dat$Lab.CO2.MicropH, dat$High.CO2.MicropH, paired = TRUE, alternative = "two.sided")
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Water.Soil.Ratio)
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Sample.ID)
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Sample.ID, geom="line") + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID, geom="line") + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID) +
geom_line() +
theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID) +
geom_smooth() +
theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID) +
geom_line() +
theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Sample.ID, geom="line") + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID, geom="line") + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Sample.ID) + geom_line() + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID) + geom_line() + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID) + geom_line() + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID) + geom_line() + theme(legend.position="none")
p <- ggplot(dat, aes(x = Real.Water.Soil.Ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID))
p + geom_smooth()
str(dat)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID))
p + geom_smooth()
warnings()
p + geom_point()
p + geom_point() + theme(legend.position="none")
p + geom_point() + geom_line() + theme(legend.position="none")
p + geom_point() + geom_smooth() + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID) + geom_line() + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID) + geom_line() + theme(legend.position="none")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID, geom="smooth") + theme(legend.position="none")
p + geom_point() + theme(legend.position="none")
p + geom_line() + theme(legend.position="none")
p + geom_point() + geom_smooth(method = "lm") + theme(legend.position="none")
p + geom_point() + geom_smooth(method = "glm") + theme(legend.position="none")
p + geom_point() + geom_smooth(method = "loess") + theme(legend.position="none")
p + geom_point() + geom_smooth(method = "lm") + theme(legend.position="none")
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none")
dat <- read.csv(file = "multifactorial/2019-08-25-hatch-ph-multifactorial-merged.csv", header = T)
dat$co2.pH.diff <- dat$Lab.CO2.MicropH-dat$High.CO2.MicropH
dat$co2.exp.pH.diff <- 10^-(dat$Lab.CO2.MicropH)-10^-(dat$High.CO2.MicropH)
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Study)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Study)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Study)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Study)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "smooth", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(se=F) + theme(legend.position="none") + facet_wrap(~Station.Name)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name)
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "loess", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Station.Name))
p + geom_point() + geom_smooth(method = "loess", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "loess", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Lower.Depth.cm))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
qplot(data = dat, x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID) + geom_line() + theme(legend.position="none") + theme_bw()
qplot(data = dat, x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Sample.ID) + geom_line() + theme(legend.position="none") + theme_bw()
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free") + theme_bw()
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + scale_fill_discrete(guide=FALSE) + facet_wrap(~Station.Name, scales="free") + theme_bw()
p + geom_point() + geom_smooth(method = "lm", se=F) + guides(fill=FALSE) + facet_wrap(~Station.Name, scales="free") + theme_bw()
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "lm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
```{r}
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
```
```{r}
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-Lab.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
```
```{r}
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
```
```{r}
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = 10^-High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
```
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = Lab.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
p <- ggplot(dat, aes(x = Real.Water.Soil.ratio, y = High.CO2.MicropH, color = Sample.ID))
p + geom_point() + geom_smooth(method = "glm", se=F) + theme(legend.position="none") + facet_wrap(~Station.Name, scales="free")
read.csv("2019-08-22-hatch-ph-standards-0.1MCaCl2-compiled.csv", header=T)
dat <- read.csv("2019-08-22-hatch-gaslab-logs-compiled.csv", header=T)
```{r}
library(ggplot2)
dat <- read.csv(file = "multifactorial/2019-08-25-hatch-ph-multifactorial-merged.csv", header = T)
dat$co2.pH.diff <- dat$Lab.CO2.MicropH-dat$High.CO2.MicropH
dat$co2.exp.pH.diff <- 10^-(dat$Lab.CO2.MicropH)-10^-(dat$High.CO2.MicropH)
str(dat)
qplot(data = dat, x = Lab.CO2.MicropH, y = High.CO2.MicropH, color = Water.Soil.Ratio)
qplot(data = dat, x = Lab.CO2.MicropH, y = High.CO2.MicropH, color = Station.Name)
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(5, 9)) + scale_y_continuous(limits = c(5, 9)) + theme_bw()
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-5, 10^-9)) + scale_y_continuous(limits = c(10^-5, 10^-9)) + theme_bw()
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9, 10^-5)) + scale_y_continuous(limits = c(10^-9, 10^-5)) + theme_bw()
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-10, 10^-4)) + scale_y_continuous(limits = c(10^-10, 10^-4)) + theme_bw()
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw()
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_line(~Water.Soil.Ratio)
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_line()
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth()
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(stat = "linear")
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(stat = "lm")
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(stat = "glm")
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(method = "lm")
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(0, 1)
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 1)
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 1, color = black)
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 1, color = "black"")
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 1, color = "black")
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 1, color = "black")
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-9.2, 10^-4.8)) + scale_y_continuous(limits = c(10^-9.2, 10^-4.8)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 0, color = "black")
qplot(data = dat, x = Lab.CO2.MicropH, y = High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(4.8, 9.2)) + scale_y_continuous(limits = c(4.8, 9.2)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 0, color = "black")
qplot(data = dat, x = Lab.CO2.MicropH, y = High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(4.8, 9.2)) + scale_y_continuous(limits = c(4.8, 9)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 0, color = "black")
qplot(data = dat, x = Lab.CO2.MicropH, y = High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(4.8, 9.2)) + scale_y_continuous(limits = c(4.8, 8.5)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 0, color = "black")
qplot(data = dat, x = Lab.CO2.MicropH, y = High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(4.8, 9.2)) + scale_y_continuous(limits = c(4.8, 8.1)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 0, color = "black")
qplot(data = dat, x = Lab.CO2.MicropH, y = High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(4.8, 8.1)) + scale_y_continuous(limits = c(4.8, 8.1)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 0, color = "black")
qplot(data = dat, x = 10^-Lab.CO2.MicropH, y = 10^-High.CO2.MicropH, color = Water.Soil.Ratio) + scale_x_continuous(limits = c(10^-8.1, 10^-4.8)) + scale_y_continuous(limits = c(10^-8.1, 10^-4.8)) + theme_bw() + geom_smooth(method = "lm") + geom_abline(slope = 1, intercept = 0, color = "black")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(dev="png", dpi=300)
# Load libraries
library(phyloseq)
source('http://bioconductor.org/biocLite.R')
source('http://bioconductor.org/biocLite.R')
biocLite('phyloseq')
BiocManager::install("phyloseq")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(dev="png", dpi=300)
BiocManager::install("phyloseq")
# Intall:
# BiocManager::install("phyloseq")
# Load libraries
library(phyloseq)
library(dada2)
install.packages("dada2")
BiocManager::install("dada2", version = "3.10")
wsstable <- read.csv("hatch/2020-02-19-field-sites-lat-long-table/2020-02-19-field-sites-lat-long-table.csv", header=T)
knitr::kable(wsstable)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(dev="png", dpi=300)
wsstable <- read.csv("2020-02-19-field-sites-lat-long-table/2020-02-19-field-sites-lat-long-table.csv", header=T)
wsstable <- read.csv("2020-02-19-field-sites-lat-long-table.csv", header=T)
knitr::kable(wsstable)
library(dada2)
library(ggplot2)
library(RColorBrewer)
library(vegan)
# Import sequence processing table and check it out
# How many sequences were retained at each step?
track = readRDS("reads/track.rds")
track
# Import final otu table
OTUs = readRDS("reads/OTUtab.nochim.rds")
# Change rows and columns so taxa are rows
OTUs = t(OTUs)
# Import as phyloseq object table
otutab = otu_table(OTUs, taxa_are_rows=TRUE)
head(otutab)
# Look at lowest-abundance samples
head(sort(sample_sums(otutab)))
name = row.names(otutab)[1]
name
hist(nchar(row.names(otutab)))
colnames(otutab)
# The sample names have suffixes appended to them - we just want sample IDs
# Get names
names = colnames(otutab)
# Remove last 17 characters
newnames = gsub('.{17}$', '', names)
# Check out names
newnames
# Assign new names to samples
colnames(otutab) = newnames
# Same thing if we wanted to simplify OTU names to IDs
# Instead of sequences (although that's useful)
otunames=row.names(otutab)
length(otunames)
newotunames = paste("OTU",rep(1:length(otunames)),sep="")
head(newotunames)
row.names(otutab) = newotunames
head(otutab)
# Cut off the sampling ID to match metadata
for (i in 1:length(colnames(otutab))){
newname = strsplit(colnames(otutab[i]),"_")[[i]][1]
colnames(otutab)[i]=newname
}
# Import sample data
samdat = read.csv("hatch-metadata-spooner.csv")
# Import sample data
samdat = read.csv("reads/hatch-metadata-spooner.csv")
# Import sample data
samdat = read.csv("hatch-metadata-spooner-copy.csv")
# Check we have all the same sample names now
samdat$MARS.Plot.exp.pH <- as.numeric(10^(-samdat$MARS.Plot.pH))
samdat$Sample.ID == colnames(otutab)[66:125]
samdat = sample_data(samdat)
row.names(samdat) = samdat$Sample.ID
samdat$Sample.ID
# Create phyloseq object
ps = phyloseq(otu_table=otutab,sample_data=samdat)
ps.melt = psmelt(ps)
ps.melt
head(ps.melt)
hist(sample_sums(ps))
ps.norm = transform_sample_counts(ps,function(x) x/sum(x))
head(otu_table(ps.norm))
sample_sums(ps.norm)
colnames(sample_data(ps.norm))
row.names(samdat)
ps.ord.pcoa = ordinate(ps, "PCoA", "bray")
p = plot_ordination(ps, ps.ord.pcoa, type="samples",label="Names")
p
ps.ord.nmds = ordinate(ps.norm, "NMDS", "bray",trymax=1000,k=2)
p = plot_ordination(ps.norm, ps.ord.nmds, type="samples")
palette = brewer.pal(8, "Spectral")
p = p + aes(colour=MARS.Plot.pH) + geom_point(size=3) + scale_colour_gradientn(colors=palette)
p
p <- plot_richness(ps, x="MARS.Plot.pH", measures=c("Observed","Shannon"))
p + geom_point(size=5, alpha=0.7)
p <- plot_richness(ps, x=10^-"MARS.Plot.pH", measures=c("Observed","Shannon"))
p + geom_point(size=5, alpha=0.7)
df = as(sample_data(ps.norm), "data.frame")
d = phyloseq::distance(ps.norm, "bray")
ps.adonis = adonis(d ~ MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis
ps.adonis = adonis(d ~ (10^-MARS.Plot.pH)+MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
10^-MARS.Plot.pH
MARS.Plot.pH
ps.adonis = adonis(d ~ MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis
ps.adonis = adonis(d ~ 10^-MARS.Plot.pH+MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis = adonis(d ~ 1*10^-MARS.Plot.pH + MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis
ps.adonis = adonis(d ~ MARS.Plot.pH*MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis
ps.adonis = adonis(d ~ MARS.Plot.pH*MARS.Plot.OM.perc*MARS.Plot.P.ppm*MARS.Plot.K.ppm, df)
ps.adonis
ps.adonis = adonis(d ~ MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis
samdat
# Import sample data
samdat = read.csv("Hatch-Metadata.csv", header=T)
# Import sample data
samdat = read.csv("hatch-metadata-spooner-copy.csv")
samdat
# Import sample data
samdat = read.csv("hatch-metadata-spooner-copy.csv", header=T)
samdat
samdat$MARS.Plot.pH.exp <- 10^-samdat$MARS.Plot.pH
samdat
samdat$MARS.Plot.exp.pH <- as.numeric(10^(-samdat$MARS.Plot.pH))
samdat$Sample.ID == colnames(otutab)[66:125]
samdat = sample_data(samdat)
row.names(samdat) = samdat$Sample.ID
# Create phyloseq object
ps = phyloseq(otu_table=otutab,sample_data=samdat)
ps.adonis = adonis(d ~ MARS.Plot.pH.exp+MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
# Import sample data
samdat = read.csv("hatch-metadata-spooner-copy.csv", header=T)
samdat$MARS.Plot.pH.exp <- 10^-samdat$MARS.Plot.pH
# Check we have all the same sample names now
samdat$MARS.Plot.exp.pH <- as.numeric(10^(-samdat$MARS.Plot.pH))
# Import sample data
samdat = read.csv("hatch-metadata-spooner-copy.csv", header=T)
# Check we have all the same sample names now
samdat$MARS.Plot.exp.pH <- as.numeric(10^(-samdat$MARS.Plot.pH))
samdat = sample_data(samdat)
row.names(samdat) = samdat$Sample.ID
# Create phyloseq object
ps = phyloseq(otu_table=otutab,sample_data=samdat)
ps.melt = psmelt(ps)
ps.melt
head(ps.melt)
hist(sample_sums(ps))
# Relative abundances
ps.norm = transform_sample_counts(ps,function(x) x/sum(x))
head(otu_table(ps.norm))
sample_sums(ps.norm)
colnames(sample_data(ps.norm))
df = as(sample_data(ps.norm), "data.frame")
d = phyloseq::distance(ps.norm, "bray")
ps.adonis = adonis(d ~ MARS.Plot.pH.exp+MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis = adonis(d ~ MARS.Plot.pH.exp.pH+MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
sample_data
sample_data(ps.norm)
ps.adonis = adonis(d ~ MARS.Plot.exp.pH+MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis
ps.adonis = adonis(d ~ MARS.Plot.exp.pH+MARS.Plot.pH, df)
ps.adonis
ps.adonis = adonis(d ~ MARS.Plot.exp.pH*MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis
ps.adonis = adonis(d ~ MARS.Plot.exp.pH+MARS.Plot.pH+MARS.Plot.OM.perc+MARS.Plot.P.ppm+MARS.Plot.K.ppm, df)
ps.adonis
